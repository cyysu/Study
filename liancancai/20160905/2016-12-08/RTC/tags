!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALMDAY	res.h	38;"	d
ALMHOUR	res.h	37;"	d
ALMMIN	res.h	36;"	d
ALMMON	res.h	39;"	d
ALMSEC	res.h	35;"	d
ALMYEAR	res.h	40;"	d
BCDDATE	test.c	8;"	d	file:
BCDDAY	res.h	45;"	d
BCDDAYWEEK	res.h	44;"	d
BCDHOUR	res.h	43;"	d
BCDMIN	res.h	42;"	d
BCDMON	res.h	46;"	d
BCDSEC	res.h	41;"	d
BCDYEAR	res.h	47;"	d
Buzzer_Configure	basedevice.c	/^void Buzzer_Configure(void)$/;"	f
Buzzer_Off	basedevice.c	/^void Buzzer_Off(void)$/;"	f
Buzzer_On	basedevice.c	/^void Buzzer_On(void)$/;"	f
CCFLAG	Makefile	/^CCFLAG=-fno-builtin$/;"	m
CROSS_COMPILE	Makefile	/^CROSS_COMPILE=arm-linux-$/;"	m
CURTICCNT	res.h	48;"	d
DATEBCD	test.c	9;"	d	file:
GPD0CON	res.h	23;"	d
GPD0DAT	res.h	24;"	d
GPM4CON	res.h	21;"	d
GPM4DAT	res.h	22;"	d
GPX3CON	res.h	25;"	d
GPX3DAT	res.h	26;"	d
INTP	res.h	31;"	d
Key_Configure	basedevice.c	/^void Key_Configure(void)$/;"	f
Key_Status	basedevice.c	/^unsigned int Key_Status(int key)$/;"	f
LINK_SCRIPT	Makefile	/^LINK_SCRIPT=test.lds$/;"	m
Lbignum	_udivsi3.S	/^Lbignum:$/;"	l
Ldiv0	_divsi3.S	/^Ldiv0:$/;"	l
Ldiv0	_udivsi3.S	/^Ldiv0:$/;"	l
Led_Configure	basedevice.c	/^void Led_Configure(void)$/;"	f
Led_Off	basedevice.c	/^void Led_Off(void)$/;"	f
Led_On	basedevice.c	/^void Led_On(void)$/;"	f
Lgot_result	_udivsi3.S	/^Lgot_result:$/;"	l
Loop1	_udivsi3.S	/^Loop1:$/;"	l
Loop3	_udivsi3.S	/^Loop3:$/;"	l
NULL	res.h	12;"	d
PRINT	res.h	27;"	d
PRINTADDR	res.h	6;"	d
PRINT_T	res.h	/^typedef  int (*PRINT_T)(const char *,...) ; $/;"	t
RTCALM	res.h	34;"	d
RTCCON	res.h	32;"	d
TARGET	Makefile	/^TARGET=test$/;"	m
TICCNT	res.h	33;"	d
U16	res.h	/^typedef  volatile unsigned short U16 ; $/;"	t
U32	res.h	/^typedef  volatile unsigned int   U32 ; $/;"	t
U8	res.h	/^typedef  volatile unsigned char  U8  ; $/;"	t
_BASEDEVICE_H	basedevice.h	3;"	d
_BCD_H	bcd.h	11;"	d
_RES_H	res.h	3;"	d
_RTC_H_	rtc.h	6;"	d
___strtok	string.c	/^char * ___strtok;$/;"	v
__aeabi_idiv	_divsi3.S	/^__aeabi_idiv:$/;"	l
__aeabi_idivmod	_udivsi3.S	/^__aeabi_idivmod:$/;"	l
__aeabi_uidiv	_udivsi3.S	/^ __aeabi_uidiv:$/;"	l
__aeabi_uidivmod	_udivsi3.S	/^__aeabi_uidivmod:$/;"	l
__div0	basedevice.c	/^void __div0(void)$/;"	f
__divsi3	_divsi3.S	/^__divsi3:$/;"	l
__udivsi3	_udivsi3.S	/^ __udivsi3:$/;"	l
_start	test.c	/^int _start(void)$/;"	f
bcd2bin	bcd.h	/^static inline unsigned int bcd2bin(u8 val)$/;"	f
bcopy	string.c	/^char * bcopy(const char * src, char * dest, int count)$/;"	f
bin2bcd	bcd.h	/^static inline u8 bin2bcd (unsigned int val)$/;"	f
curbit	_udivsi3.S	/^curbit		.req	r3$/;"	l
delay_ASM	basedevice.c	/^void delay_ASM(void)$/;"	f
delay_C	basedevice.c	/^void delay_C(void)$/;"	f
dividend	_udivsi3.S	/^dividend	.req	r0$/;"	l
divisor	_udivsi3.S	/^divisor		.req	r1$/;"	l
memchr	string.c	/^void *memchr(const void *s, int c, size_t n)$/;"	f
memcmp	string.c	/^int memcmp(const void * cs,const void * ct,size_t count)$/;"	f
memcpy	string.c	/^void * memcpy(void *dest, const void *src, size_t count)$/;"	f
memmove	string.c	/^void * memmove(void * dest,const void *src,size_t count)$/;"	f
memscan	string.c	/^void * memscan(void * addr, int c, size_t size)$/;"	f
memset	string.c	/^void * memset(void * s,int c,size_t count)$/;"	f
printf	string.c	/^static PRINT_T printf =  PRINTADDR ; $/;"	v	file:
printf	test.c	/^static PRINT_T printf =  PRINTADDR ; $/;"	v	file:
read_RTC_date	test.c	/^void read_RTC_date(void)$/;"	f
result	_udivsi3.S	/^result		.req	r2$/;"	l
rtc_get	s3c44b0_rtc.c	/^int rtc_get (struct rtc_time* tm)$/;"	f
rtc_reset	s3c44b0_rtc.c	/^void rtc_reset (void)$/;"	f
rtc_set	s3c44b0_rtc.c	/^int rtc_set (struct rtc_time* tm)$/;"	f
rtc_time	rtc.h	/^struct rtc_time {$/;"	s
rtcbase	res.h	30;"	d
set_RTC_date	test.c	/^void set_RTC_date(void)$/;"	f
size_t	res.h	/^typedef  unsigned int  size_t ; $/;"	t
strcat	string.c	/^char * strcat(char * dest, const char * src)$/;"	f
strchr	string.c	/^char * strchr(const char * s, int c)$/;"	f
strcmp	string.c	/^int strcmp(const char * cs,const char * ct)$/;"	f
strcpy	string.c	/^char * strcpy(char * dest,const char *src)$/;"	f
strlen	string.c	/^size_t strlen(const char * s)$/;"	f
strncat	string.c	/^char * strncat(char *dest, const char *src, size_t count)$/;"	f
strncmp	string.c	/^int strncmp(const char * cs,const char * ct,size_t count)$/;"	f
strncpy	string.c	/^char * strncpy(char * dest,const char *src,size_t count)$/;"	f
strnlen	string.c	/^size_t strnlen(const char * s, size_t count)$/;"	f
strpbrk	string.c	/^char * strpbrk(const char * cs,const char * ct)$/;"	f
strrchr	string.c	/^char * strrchr(const char * s, int c)$/;"	f
strsep	string.c	/^char * strsep(char **s, const char *ct)$/;"	f
strspn	string.c	/^size_t strspn(const char *s, const char *accept)$/;"	f
strstr	string.c	/^char * strstr(const char * s1,const char * s2)$/;"	f
strswab	string.c	/^char *strswab(const char *s)$/;"	f
strtok	string.c	/^char * strtok(char * s,const char * ct)$/;"	f
tm_hour	rtc.h	/^	int tm_hour;$/;"	m	struct:rtc_time
tm_isdst	rtc.h	/^	int tm_isdst;$/;"	m	struct:rtc_time
tm_mday	rtc.h	/^	int tm_mday;$/;"	m	struct:rtc_time
tm_min	rtc.h	/^	int tm_min;$/;"	m	struct:rtc_time
tm_mon	rtc.h	/^	int tm_mon;$/;"	m	struct:rtc_time
tm_sec	rtc.h	/^	int tm_sec;$/;"	m	struct:rtc_time
tm_wday	rtc.h	/^	int tm_wday;$/;"	m	struct:rtc_time
tm_yday	rtc.h	/^	int tm_yday;$/;"	m	struct:rtc_time
tm_year	rtc.h	/^	int tm_year;$/;"	m	struct:rtc_time
u16	res.h	/^typedef  unsigned short u16 ; $/;"	t
u32	res.h	/^typedef  unsigned int u32 ; $/;"	t
u8	res.h	/^typedef  unsigned char  u8 ; $/;"	t
ulong	res.h	/^typedef  unsigned long ulong ; $/;"	t
