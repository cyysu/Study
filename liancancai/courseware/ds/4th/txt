链表：
	初始化: 
	加载：
	插入:			
		前插：			
		后插：				
		指定位置插入
	删除：
		按关键删除
			从前到后
			从后到前
		删除所有
			姓名：
			年龄：
			。。。。
		安位置删除
	查找：
		按关键字查找
			数据类型
			姓名 ＝》 所有信息都显示出来
		查找所有
		位置查找
	修改：
		姓名
	排序：
		总分
			降序：
			升序：
		cn:
		en:
	遍历：
		所有数据信息全部显示出来  列表
		cat more less tail head
	存储：
	销毁：
	
内核链表:
	主要内核代码中比较长见
	GETP();
	container_of();
============================
栈和队列

	c : 栈 指的是内存一段空间
	ds: 栈 指的是一种数据结构
		先进后出数据结构
	定义栈：空间 max
	栈顶元素 栈底元素：top
	判断满栈：
		top == max
	判断空栈：
		top == 0
	入栈 压栈：
		判断是否是满栈：
			如果是满栈，则不可以入栈
			如果不是满栈，则可以入栈
		stack -> num -> top++
		
	出栈 弹栈：
		判断是否空栈
			如果是空栈，则不可以出栈，反之，则可以。
		stack -> top-- -> num
	

	练习：
		正确显示方式
		hello 
		zhang san

		"hea#lll#o@zhaken###ngsin##an@"
		
		一个#表示一个错误字符
		@表示换行


=============================
队列：循环
	先进先出 后进后出数据结构
	定义队列 int  data queue
	队列大小：	max
	队头：		front = 0
	队尾：		end = 0
	队满：		end - front = max
		为了解决判断队列是否是满队还是空队？
			1 定义累加器 count
				满队：count == max
				空队：count == 0
			2 空出一个数据位
				满队：(end + 1) % max == front
				空队：front == end
		
	队空：
	入队：
		判断是否是满队
		data -> queue -> end++
	出队：
		判断是否是空队
		queue ->data -> front++

	1 封装数栈 链栈 数队 链队

	2 实现逆波兰表达式
		234+-*2/452%+*9
	3 实现迷宫求解















