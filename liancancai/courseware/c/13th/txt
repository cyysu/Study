file IO:
	
	打开文件：
		 FILE *fopen(const char *path, const char *mode);
		 第一个参数：表示文件路径
		 	绝对路径：/
			相对路径：pwd
		 第二个参数：表示对文件操作模式
		 	r	:表示只读
				如果文件不存在，则打开失败
				如果存在，则文件指针指向文件开头
			r+	: 表示读写
				如果文件不存在，则打开失败
				如果文件存在，文件指针指向文件开头
				覆盖方式写
			w	:
				如果文件不存在，则创建文件
				如果文件存在，则清空
			w+	:
				如果文件不存在，则创建文件
				如果文件存在，则清空

				写清空写
			a	: 表示追加写 
				如果文件不存在，则创建
				如果文件存在，写到文件结尾
			a+	: 表示读写
				如果文件，则创建
				如果文件存在：
				读：文件指针偏移到文件开头。
				写：文件指针偏移到文件结尾。

		 返回值：文件指针
		 	失败：NULL
			成功：!= NULL

	关闭文件：
		int fclose(FILE *fp);

	读取文件信息：
		int fgetc(FILE *stream);

	写入文件信息
		int fputc(int c, FILE *stream);

	按行操作：
		获取数据信息，从文件中
		char *fgets(char *s, int size, FILE *stream);
		第一个参数：表示获取信息空间地址
		第二个参数：表示空间地址大小
		第三个参数：表示文件指针，fopen()
		返回值：
			成功:指向空间地址
			失败:指向NULL

		写入数据到文件中
		int fputs(const char *s, FILE *stream)


	
	按buf读和写：
		size_t  fread(void *ptr, size_t size, size_t nmemb, FILE
		       *stream);
		第一个参数：表示获取数据空间地址
		第二个参数：表示一个数据空间大小 类型 表示块大小
		第三个参数：表示数据个数			  表示多少块
		第四个参数：表示文件指针 fopen
		
		返回值：
			成功：num
			失败：<= 0
		size_t  fwrite(const  void  *ptr,  size_t  size,  size_t
		       nmemb, FILE *stream);

		fread() 和 fwrite 也可以操作二进制文件

	按格式读和写
		%d %s %f
		写
		int fprintf(FILE *stream, const char *format, ...);
		读
		int fscanf(FILE *stream, const char *format, ...);

	指针偏移：
		int fseek(FILE *stream, long offset, int whence);
		第一个参数： 表示文件指针 fopen
		第二个参数： 表示偏移量
		第三个参数： 表示偏移位置
			SEEK_SET	：表示文件开头
			SEEK_CUR	：表示当前位置
			SEEK_END	：表示文件结尾
	long ftell(FILE *stream);报告当前指针位置
	void rewind(FILE *stream);偏移到文件开头


	1 实现cp fread fwrite
	2 实现grep 
		显示行号
		关键字高亮显示

		、










	homework :
		实现cp

		cp src dest 
		a.out src dest
			src -> argv[1] -> r -> fgetc
			dest -> argv[2] -> w -> fputc
			diff file1 file2

	报错函数：
		void perror(const char *s);
	













